syntax = "proto3";
option go_package = "../pb";

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

message Message {
    MessageType messageType     = 1;
    string messageID            = 2;
    uint32 sequence             = 3;
    google.protobuf.Any payload = 4;

    enum MessageType {
        ACK                      = 0;
        PING                     = 1;
        PONG                     = 2;
        CHAT                     = 3;
        FOLLOW                   = 4;
        UNFOLLOW                 = 5;
        STORE                    = 6;
        ORDER                    = 7;
        DISPUTE                  = 8;
        ADDRESS_REQUEST          = 9;
        ADDRESS_RESPONSE         = 10;
        CHANNEL_REQUEST          = 11;
        CHANNEL_RESPONSE         = 12;
    }
}

message ChatMessage {
    string orderID                      = 1;
    string message                      = 2;
    google.protobuf.Timestamp timestamp = 3;
    Flag flag                           = 4;

    // Only used when Flag is READ.
    string readID                       = 5;

    enum Flag {
        MESSAGE = 0;
        TYPING  = 1;
        READ    = 2;
    }
}

message StoreMessage {
    repeated bytes cids = 1;
}

message AckMessage {
    string ackedMessageID = 1;
}

message OrderMessage {
    string orderID              = 1;
    MessageType messageType     = 2;
    google.protobuf.Any message = 3;
    bytes signature             = 4;

    enum MessageType {
        ORDER_OPEN         = 0;
        ORDER_REJECT       = 1;
        ORDER_CANCEL       = 2;
        ORDER_CONFIRMATION = 3;
        RATING_SIGNATURES  = 4;
        ORDER_FULFILLMENT  = 5;
        ORDER_COMPLETE     = 6;
        DISPUTE_OPEN       = 7;
        DISPUTE_UPDATE     = 8;
        DISPUTE_CLOSE      = 9;
        REFUND             = 10;
        PAYMENT_SENT       = 11;
        PAYMENT_FINALIZED  = 12;
    }
}

message OrderList {
    repeated OrderMessage messages = 1;
}

message AddressRequestMessage {
    string coin = 1;
}

message AddressResponseMessage {
    string address = 1;
    string coin    = 2;
}

message ChannelRequestMessage {
    string topic = 1;
}

message ChannelResponseMessage {
    string topic        = 1;
    repeated bytes cids = 2;
}


message Envelope {
    bytes senderPubkey = 1;
    Message message    = 2;
    bytes signature    = 3;
}
