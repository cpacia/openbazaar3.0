// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: orders.proto

package pb

import (
	"github.com/cpacia/openbazaar3.0/net/pb"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderOpen_Payment_Method int32

const (
	OrderOpen_Payment_DIRECT     OrderOpen_Payment_Method = 0 // Address request
	OrderOpen_Payment_CANCELABLE OrderOpen_Payment_Method = 1 // 1 of 2 cancelable address
	OrderOpen_Payment_MODERATED  OrderOpen_Payment_Method = 2 // 2 of 3 escrow address
)

// Enum value maps for OrderOpen_Payment_Method.
var (
	OrderOpen_Payment_Method_name = map[int32]string{
		0: "DIRECT",
		1: "CANCELABLE",
		2: "MODERATED",
	}
	OrderOpen_Payment_Method_value = map[string]int32{
		"DIRECT":     0,
		"CANCELABLE": 1,
		"MODERATED":  2,
	}
)

func (x OrderOpen_Payment_Method) Enum() *OrderOpen_Payment_Method {
	p := new(OrderOpen_Payment_Method)
	*p = x
	return p
}

func (x OrderOpen_Payment_Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderOpen_Payment_Method) Descriptor() protoreflect.EnumDescriptor {
	return file_orders_proto_enumTypes[0].Descriptor()
}

func (OrderOpen_Payment_Method) Type() protoreflect.EnumType {
	return &file_orders_proto_enumTypes[0]
}

func (x OrderOpen_Payment_Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderOpen_Payment_Method.Descriptor instead.
func (OrderOpen_Payment_Method) EnumDescriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{0, 2, 0}
}

type OrderReject_RejectType int32

const (
	OrderReject_USER_REJECT      OrderReject_RejectType = 0
	OrderReject_VALIDATION_ERROR OrderReject_RejectType = 1
)

// Enum value maps for OrderReject_RejectType.
var (
	OrderReject_RejectType_name = map[int32]string{
		0: "USER_REJECT",
		1: "VALIDATION_ERROR",
	}
	OrderReject_RejectType_value = map[string]int32{
		"USER_REJECT":      0,
		"VALIDATION_ERROR": 1,
	}
)

func (x OrderReject_RejectType) Enum() *OrderReject_RejectType {
	p := new(OrderReject_RejectType)
	*p = x
	return p
}

func (x OrderReject_RejectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderReject_RejectType) Descriptor() protoreflect.EnumDescriptor {
	return file_orders_proto_enumTypes[1].Descriptor()
}

func (OrderReject_RejectType) Type() protoreflect.EnumType {
	return &file_orders_proto_enumTypes[1]
}

func (x OrderReject_RejectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderReject_RejectType.Descriptor instead.
func (OrderReject_RejectType) EnumDescriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{1, 0}
}

type DisputeOpen_Party int32

const (
	DisputeOpen_BUYER  DisputeOpen_Party = 0
	DisputeOpen_VENDOR DisputeOpen_Party = 1
)

// Enum value maps for DisputeOpen_Party.
var (
	DisputeOpen_Party_name = map[int32]string{
		0: "BUYER",
		1: "VENDOR",
	}
	DisputeOpen_Party_value = map[string]int32{
		"BUYER":  0,
		"VENDOR": 1,
	}
)

func (x DisputeOpen_Party) Enum() *DisputeOpen_Party {
	p := new(DisputeOpen_Party)
	*p = x
	return p
}

func (x DisputeOpen_Party) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DisputeOpen_Party) Descriptor() protoreflect.EnumDescriptor {
	return file_orders_proto_enumTypes[2].Descriptor()
}

func (DisputeOpen_Party) Type() protoreflect.EnumType {
	return &file_orders_proto_enumTypes[2]
}

func (x DisputeOpen_Party) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DisputeOpen_Party.Descriptor instead.
func (DisputeOpen_Party) EnumDescriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{9, 0}
}

type OrderOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listings             []*SignedListing     `protobuf:"bytes,1,rep,name=listings,proto3" json:"listings,omitempty"`
	RefundAddress        string               `protobuf:"bytes,2,opt,name=refundAddress,proto3" json:"refundAddress,omitempty"`
	Shipping             *OrderOpen_Shipping  `protobuf:"bytes,3,opt,name=shipping,proto3" json:"shipping,omitempty"`
	BuyerID              *ID                  `protobuf:"bytes,4,opt,name=buyerID,proto3" json:"buyerID,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Items                []*OrderOpen_Item    `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
	Payment              *OrderOpen_Payment   `protobuf:"bytes,7,opt,name=payment,proto3" json:"payment,omitempty"`
	RatingKeys           [][]byte             `protobuf:"bytes,8,rep,name=ratingKeys,proto3" json:"ratingKeys,omitempty"`
	AlternateContactInfo string               `protobuf:"bytes,9,opt,name=alternateContactInfo,proto3" json:"alternateContactInfo,omitempty"`
}

func (x *OrderOpen) Reset() {
	*x = OrderOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOpen) ProtoMessage() {}

func (x *OrderOpen) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOpen.ProtoReflect.Descriptor instead.
func (*OrderOpen) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{0}
}

func (x *OrderOpen) GetListings() []*SignedListing {
	if x != nil {
		return x.Listings
	}
	return nil
}

func (x *OrderOpen) GetRefundAddress() string {
	if x != nil {
		return x.RefundAddress
	}
	return ""
}

func (x *OrderOpen) GetShipping() *OrderOpen_Shipping {
	if x != nil {
		return x.Shipping
	}
	return nil
}

func (x *OrderOpen) GetBuyerID() *ID {
	if x != nil {
		return x.BuyerID
	}
	return nil
}

func (x *OrderOpen) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *OrderOpen) GetItems() []*OrderOpen_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OrderOpen) GetPayment() *OrderOpen_Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *OrderOpen) GetRatingKeys() [][]byte {
	if x != nil {
		return x.RatingKeys
	}
	return nil
}

func (x *OrderOpen) GetAlternateContactInfo() string {
	if x != nil {
		return x.AlternateContactInfo
	}
	return ""
}

type OrderReject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      OrderReject_RejectType `protobuf:"varint,1,opt,name=type,proto3,enum=OrderReject_RejectType" json:"type,omitempty"`
	Reason    string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Timestamp *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *OrderReject) Reset() {
	*x = OrderReject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReject) ProtoMessage() {}

func (x *OrderReject) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReject.ProtoReflect.Descriptor instead.
func (*OrderReject) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{1}
}

func (x *OrderReject) GetType() OrderReject_RejectType {
	if x != nil {
		return x.Type
	}
	return OrderReject_USER_REJECT
}

func (x *OrderReject) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OrderReject) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type OrderConfirmation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID string               `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"` // Only cancelable orders.
	Timestamp     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *OrderConfirmation) Reset() {
	*x = OrderConfirmation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderConfirmation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderConfirmation) ProtoMessage() {}

func (x *OrderConfirmation) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderConfirmation.ProtoReflect.Descriptor instead.
func (*OrderConfirmation) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{2}
}

func (x *OrderConfirmation) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *OrderConfirmation) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type OrderCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID string               `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"` // Only cancelable orders.
	Timestamp     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *OrderCancel) Reset() {
	*x = OrderCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCancel) ProtoMessage() {}

func (x *OrderCancel) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCancel.ProtoReflect.Descriptor instead.
func (*OrderCancel) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{3}
}

func (x *OrderCancel) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *OrderCancel) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type RatingSignatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sigs      []*RatingSignature   `protobuf:"bytes,1,rep,name=sigs,proto3" json:"sigs,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RatingSignatures) Reset() {
	*x = RatingSignatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingSignatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingSignatures) ProtoMessage() {}

func (x *RatingSignatures) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingSignatures.ProtoReflect.Descriptor instead.
func (*RatingSignatures) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{4}
}

func (x *RatingSignatures) GetSigs() []*RatingSignature {
	if x != nil {
		return x.Sigs
	}
	return nil
}

func (x *RatingSignatures) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type RatingSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug            string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	RatingKey       []byte `protobuf:"bytes,2,opt,name=ratingKey,proto3" json:"ratingKey,omitempty"`
	VendorSignature []byte `protobuf:"bytes,3,opt,name=vendorSignature,proto3" json:"vendorSignature,omitempty"` // The signature covers the serialization of this object with the signature emptied.
}

func (x *RatingSignature) Reset() {
	*x = RatingSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingSignature) ProtoMessage() {}

func (x *RatingSignature) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingSignature.ProtoReflect.Descriptor instead.
func (*RatingSignature) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{5}
}

func (x *RatingSignature) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *RatingSignature) GetRatingKey() []byte {
	if x != nil {
		return x.RatingKey
	}
	return nil
}

func (x *RatingSignature) GetVendorSignature() []byte {
	if x != nil {
		return x.VendorSignature
	}
	return nil
}

type OrderFulfillment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fulfillments []*OrderFulfillment_FulfilledItem `protobuf:"bytes,1,rep,name=fulfillments,proto3" json:"fulfillments,omitempty"`
	ReleaseInfo  *EscrowRelease                    `protobuf:"bytes,2,opt,name=releaseInfo,proto3" json:"releaseInfo,omitempty"` // Moderated orders only.
	Timestamp    *timestamp.Timestamp              `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *OrderFulfillment) Reset() {
	*x = OrderFulfillment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFulfillment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFulfillment) ProtoMessage() {}

func (x *OrderFulfillment) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFulfillment.ProtoReflect.Descriptor instead.
func (*OrderFulfillment) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{6}
}

func (x *OrderFulfillment) GetFulfillments() []*OrderFulfillment_FulfilledItem {
	if x != nil {
		return x.Fulfillments
	}
	return nil
}

func (x *OrderFulfillment) GetReleaseInfo() *EscrowRelease {
	if x != nil {
		return x.ReleaseInfo
	}
	return nil
}

func (x *OrderFulfillment) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type OrderComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ratings     []*Rating            `protobuf:"bytes,1,rep,name=ratings,proto3" json:"ratings,omitempty"`
	ReleaseInfo *EscrowRelease       `protobuf:"bytes,2,opt,name=releaseInfo,proto3" json:"releaseInfo,omitempty"` // Moderated orders only.
	Timestamp   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *OrderComplete) Reset() {
	*x = OrderComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderComplete) ProtoMessage() {}

func (x *OrderComplete) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderComplete.ProtoReflect.Descriptor instead.
func (*OrderComplete) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{7}
}

func (x *OrderComplete) GetRatings() []*Rating {
	if x != nil {
		return x.Ratings
	}
	return nil
}

func (x *OrderComplete) GetReleaseInfo() *EscrowRelease {
	if x != nil {
		return x.ReleaseInfo
	}
	return nil
}

func (x *OrderComplete) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Rating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorID        *ID                  `protobuf:"bytes,1,opt,name=vendorID,proto3" json:"vendorID,omitempty"`
	VendorSig       *RatingSignature     `protobuf:"bytes,2,opt,name=vendorSig,proto3" json:"vendorSig,omitempty"`
	BuyerID         *ID                  `protobuf:"bytes,3,opt,name=buyerID,proto3" json:"buyerID,omitempty"`     // optional
	BuyerName       string               `protobuf:"bytes,4,opt,name=buyerName,proto3" json:"buyerName,omitempty"` // optional
	BuyerSig        []byte               `protobuf:"bytes,5,opt,name=buyerSig,proto3" json:"buyerSig,omitempty"`   // optional
	Timestamp       *timestamp.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Overall         uint32               `protobuf:"varint,7,opt,name=overall,proto3" json:"overall,omitempty"`
	Quality         uint32               `protobuf:"varint,8,opt,name=quality,proto3" json:"quality,omitempty"`
	Description     uint32               `protobuf:"varint,9,opt,name=description,proto3" json:"description,omitempty"`
	DeliverySpeed   uint32               `protobuf:"varint,10,opt,name=deliverySpeed,proto3" json:"deliverySpeed,omitempty"`
	CustomerService uint32               `protobuf:"varint,11,opt,name=customerService,proto3" json:"customerService,omitempty"`
	Review          string               `protobuf:"bytes,12,opt,name=review,proto3" json:"review,omitempty"`
	RatingSignature []byte               `protobuf:"bytes,13,opt,name=ratingSignature,proto3" json:"ratingSignature,omitempty"`
}

func (x *Rating) Reset() {
	*x = Rating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rating) ProtoMessage() {}

func (x *Rating) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rating.ProtoReflect.Descriptor instead.
func (*Rating) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{8}
}

func (x *Rating) GetVendorID() *ID {
	if x != nil {
		return x.VendorID
	}
	return nil
}

func (x *Rating) GetVendorSig() *RatingSignature {
	if x != nil {
		return x.VendorSig
	}
	return nil
}

func (x *Rating) GetBuyerID() *ID {
	if x != nil {
		return x.BuyerID
	}
	return nil
}

func (x *Rating) GetBuyerName() string {
	if x != nil {
		return x.BuyerName
	}
	return ""
}

func (x *Rating) GetBuyerSig() []byte {
	if x != nil {
		return x.BuyerSig
	}
	return nil
}

func (x *Rating) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Rating) GetOverall() uint32 {
	if x != nil {
		return x.Overall
	}
	return 0
}

func (x *Rating) GetQuality() uint32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *Rating) GetDescription() uint32 {
	if x != nil {
		return x.Description
	}
	return 0
}

func (x *Rating) GetDeliverySpeed() uint32 {
	if x != nil {
		return x.DeliverySpeed
	}
	return 0
}

func (x *Rating) GetCustomerService() uint32 {
	if x != nil {
		return x.CustomerService
	}
	return 0
}

func (x *Rating) GetReview() string {
	if x != nil {
		return x.Review
	}
	return ""
}

func (x *Rating) GetRatingSignature() []byte {
	if x != nil {
		return x.RatingSignature
	}
	return nil
}

type DisputeOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenedBy  DisputeOpen_Party    `protobuf:"varint,1,opt,name=openedBy,proto3,enum=DisputeOpen_Party" json:"openedBy,omitempty"`
	Reason    string               `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Contract  []byte               `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *DisputeOpen) Reset() {
	*x = DisputeOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisputeOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisputeOpen) ProtoMessage() {}

func (x *DisputeOpen) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisputeOpen.ProtoReflect.Descriptor instead.
func (*DisputeOpen) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{9}
}

func (x *DisputeOpen) GetOpenedBy() DisputeOpen_Party {
	if x != nil {
		return x.OpenedBy
	}
	return DisputeOpen_BUYER
}

func (x *DisputeOpen) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DisputeOpen) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DisputeOpen) GetContract() []byte {
	if x != nil {
		return x.Contract
	}
	return nil
}

type DisputeUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Contract  []byte               `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *DisputeUpdate) Reset() {
	*x = DisputeUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisputeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisputeUpdate) ProtoMessage() {}

func (x *DisputeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisputeUpdate.ProtoReflect.Descriptor instead.
func (*DisputeUpdate) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{10}
}

func (x *DisputeUpdate) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DisputeUpdate) GetContract() []byte {
	if x != nil {
		return x.Contract
	}
	return nil
}

type DisputeClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verdict     string                               `protobuf:"bytes,1,opt,name=verdict,proto3" json:"verdict,omitempty"`
	ReleaseInfo *DisputeClose_ModeratedEscrowRelease `protobuf:"bytes,2,opt,name=releaseInfo,proto3" json:"releaseInfo,omitempty"`
	Timestamp   *timestamp.Timestamp                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *DisputeClose) Reset() {
	*x = DisputeClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisputeClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisputeClose) ProtoMessage() {}

func (x *DisputeClose) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisputeClose.ProtoReflect.Descriptor instead.
func (*DisputeClose) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{11}
}

func (x *DisputeClose) GetVerdict() string {
	if x != nil {
		return x.Verdict
	}
	return ""
}

func (x *DisputeClose) GetReleaseInfo() *DisputeClose_ModeratedEscrowRelease {
	if x != nil {
		return x.ReleaseInfo
	}
	return nil
}

func (x *DisputeClose) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Refund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RefundInfo:
	//	*Refund_TransactionID
	//	*Refund_ReleaseInfo
	RefundInfo isRefund_RefundInfo  `protobuf_oneof:"refundInfo"`
	Amount     string               `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Timestamp  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Refund) Reset() {
	*x = Refund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Refund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refund) ProtoMessage() {}

func (x *Refund) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refund.ProtoReflect.Descriptor instead.
func (*Refund) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{12}
}

func (m *Refund) GetRefundInfo() isRefund_RefundInfo {
	if m != nil {
		return m.RefundInfo
	}
	return nil
}

func (x *Refund) GetTransactionID() string {
	if x, ok := x.GetRefundInfo().(*Refund_TransactionID); ok {
		return x.TransactionID
	}
	return ""
}

func (x *Refund) GetReleaseInfo() *EscrowRelease {
	if x, ok := x.GetRefundInfo().(*Refund_ReleaseInfo); ok {
		return x.ReleaseInfo
	}
	return nil
}

func (x *Refund) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Refund) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type isRefund_RefundInfo interface {
	isRefund_RefundInfo()
}

type Refund_TransactionID struct {
	TransactionID string `protobuf:"bytes,1,opt,name=transactionID,proto3,oneof"`
}

type Refund_ReleaseInfo struct {
	ReleaseInfo *EscrowRelease `protobuf:"bytes,2,opt,name=releaseInfo,proto3,oneof"`
}

func (*Refund_TransactionID) isRefund_RefundInfo() {}

func (*Refund_ReleaseInfo) isRefund_RefundInfo() {}

type PaymentSent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID string `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
}

func (x *PaymentSent) Reset() {
	*x = PaymentSent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSent) ProtoMessage() {}

func (x *PaymentSent) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSent.ProtoReflect.Descriptor instead.
func (*PaymentSent) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{13}
}

func (x *PaymentSent) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

type PaymentFinalized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PaymentFinalized) Reset() {
	*x = PaymentFinalized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentFinalized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentFinalized) ProtoMessage() {}

func (x *PaymentFinalized) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentFinalized.ProtoReflect.Descriptor instead.
func (*PaymentFinalized) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{14}
}

type EscrowRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EscrowSignatures []*Signature `protobuf:"bytes,1,rep,name=escrowSignatures,proto3" json:"escrowSignatures,omitempty"`
	FromIDs          [][]byte     `protobuf:"bytes,2,rep,name=fromIDs,proto3" json:"fromIDs,omitempty"`
	ToAddress        string       `protobuf:"bytes,3,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	ToAmount         string       `protobuf:"bytes,4,opt,name=toAmount,proto3" json:"toAmount,omitempty"`
	TransactionFee   string       `protobuf:"bytes,5,opt,name=transactionFee,proto3" json:"transactionFee,omitempty"`
}

func (x *EscrowRelease) Reset() {
	*x = EscrowRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscrowRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscrowRelease) ProtoMessage() {}

func (x *EscrowRelease) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscrowRelease.ProtoReflect.Descriptor instead.
func (*EscrowRelease) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{15}
}

func (x *EscrowRelease) GetEscrowSignatures() []*Signature {
	if x != nil {
		return x.EscrowSignatures
	}
	return nil
}

func (x *EscrowRelease) GetFromIDs() [][]byte {
	if x != nil {
		return x.FromIDs
	}
	return nil
}

func (x *EscrowRelease) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *EscrowRelease) GetToAmount() string {
	if x != nil {
		return x.ToAmount
	}
	return ""
}

func (x *EscrowRelease) GetTransactionFee() string {
	if x != nil {
		return x.TransactionFee
	}
	return ""
}

type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      []byte `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Index     uint32 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{16}
}

func (x *Signature) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Signature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Signature) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type PaymentSentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*PaymentSentList_Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *PaymentSentList) Reset() {
	*x = PaymentSentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSentList) ProtoMessage() {}

func (x *PaymentSentList) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSentList.ProtoReflect.Descriptor instead.
func (*PaymentSentList) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{17}
}

func (x *PaymentSentList) GetMessages() []*PaymentSentList_Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type FulfillmentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*FulfillmentList_Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *FulfillmentList) Reset() {
	*x = FulfillmentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FulfillmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FulfillmentList) ProtoMessage() {}

func (x *FulfillmentList) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FulfillmentList.ProtoReflect.Descriptor instead.
func (*FulfillmentList) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{18}
}

func (x *FulfillmentList) GetMessages() []*FulfillmentList_Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type RefundList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*RefundList_Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *RefundList) Reset() {
	*x = RefundList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundList) ProtoMessage() {}

func (x *RefundList) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundList.ProtoReflect.Descriptor instead.
func (*RefundList) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{19}
}

func (x *RefundList) GetMessages() []*RefundList_Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID                    string                  `protobuf:"bytes,1,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	Role                       string                  `protobuf:"bytes,2,opt,name=Role,proto3" json:"Role,omitempty"`
	OrderOpen                  *OrderOpen              `protobuf:"bytes,3,opt,name=orderOpen,proto3" json:"orderOpen,omitempty"`
	OrderOpenAcked             bool                    `protobuf:"varint,4,opt,name=orderOpenAcked,proto3" json:"orderOpenAcked,omitempty"`
	OrderReject                *OrderReject            `protobuf:"bytes,5,opt,name=orderReject,proto3" json:"orderReject,omitempty"`
	OrderRejectAcked           bool                    `protobuf:"varint,6,opt,name=orderRejectAcked,proto3" json:"orderRejectAcked,omitempty"`
	OrderCancel                *OrderCancel            `protobuf:"bytes,7,opt,name=orderCancel,proto3" json:"orderCancel,omitempty"`
	OrderCancelAcked           bool                    `protobuf:"varint,8,opt,name=orderCancelAcked,proto3" json:"orderCancelAcked,omitempty"`
	OrderConfirmation          *OrderConfirmation      `protobuf:"bytes,9,opt,name=orderConfirmation,proto3" json:"orderConfirmation,omitempty"`
	OrderConfirmationAcked     bool                    `protobuf:"varint,10,opt,name=orderConfirmationAcked,proto3" json:"orderConfirmationAcked,omitempty"`
	OrderComplete              *OrderComplete          `protobuf:"bytes,11,opt,name=orderComplete,proto3" json:"orderComplete,omitempty"`
	OrderCompleteAcked         bool                    `protobuf:"varint,12,opt,name=orderCompleteAcked,proto3" json:"orderCompleteAcked,omitempty"`
	DisputeOpen                *DisputeOpen            `protobuf:"bytes,13,opt,name=disputeOpen,proto3" json:"disputeOpen,omitempty"`
	DisputeOpenOtherPartyAcked bool                    `protobuf:"varint,14,opt,name=disputeOpenOtherPartyAcked,proto3" json:"disputeOpenOtherPartyAcked,omitempty"`
	DisputeOpenModeratorAcked  bool                    `protobuf:"varint,15,opt,name=disputeOpenModeratorAcked,proto3" json:"disputeOpenModeratorAcked,omitempty"`
	DisputeClose               *DisputeClose           `protobuf:"bytes,16,opt,name=disputeClose,proto3" json:"disputeClose,omitempty"`
	DisputeCloseAcked          bool                    `protobuf:"varint,17,opt,name=disputeCloseAcked,proto3" json:"disputeCloseAcked,omitempty"`
	DisputeUpdate              *DisputeUpdate          `protobuf:"bytes,18,opt,name=disputeUpdate,proto3" json:"disputeUpdate,omitempty"`
	DisputeUpdateAcked         bool                    `protobuf:"varint,19,opt,name=disputeUpdateAcked,proto3" json:"disputeUpdateAcked,omitempty"`
	PaymentFinalized           *PaymentFinalized       `protobuf:"bytes,20,opt,name=paymentFinalized,proto3" json:"paymentFinalized,omitempty"`
	PaymentFinalizedAcked      bool                    `protobuf:"varint,21,opt,name=paymentFinalizedAcked,proto3" json:"paymentFinalizedAcked,omitempty"`
	OrderFulfillments          []*OrderFulfillment     `protobuf:"bytes,22,rep,name=orderFulfillments,proto3" json:"orderFulfillments,omitempty"`
	FulfillmentsAcked          bool                    `protobuf:"varint,23,opt,name=fulfillmentsAcked,proto3" json:"fulfillmentsAcked,omitempty"`
	Refunds                    []*Refund               `protobuf:"bytes,24,rep,name=refunds,proto3" json:"refunds,omitempty"`
	RefundsAcked               bool                    `protobuf:"varint,25,opt,name=refundsAcked,proto3" json:"refundsAcked,omitempty"`
	PaymentsSent               []*PaymentSent          `protobuf:"bytes,26,rep,name=paymentsSent,proto3" json:"paymentsSent,omitempty"`
	PaymentsSentAcked          bool                    `protobuf:"varint,27,opt,name=paymentsSentAcked,proto3" json:"paymentsSentAcked,omitempty"`
	ParkedMessages             *pb.OrderList           `protobuf:"bytes,28,opt,name=parkedMessages,proto3" json:"parkedMessages,omitempty"`
	ErroredMessages            *pb.OrderList           `protobuf:"bytes,29,opt,name=erroredMessages,proto3" json:"erroredMessages,omitempty"`
	Transactions               []*Contract_Transaction `protobuf:"bytes,30,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *Contract) Reset() {
	*x = Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{20}
}

func (x *Contract) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *Contract) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Contract) GetOrderOpen() *OrderOpen {
	if x != nil {
		return x.OrderOpen
	}
	return nil
}

func (x *Contract) GetOrderOpenAcked() bool {
	if x != nil {
		return x.OrderOpenAcked
	}
	return false
}

func (x *Contract) GetOrderReject() *OrderReject {
	if x != nil {
		return x.OrderReject
	}
	return nil
}

func (x *Contract) GetOrderRejectAcked() bool {
	if x != nil {
		return x.OrderRejectAcked
	}
	return false
}

func (x *Contract) GetOrderCancel() *OrderCancel {
	if x != nil {
		return x.OrderCancel
	}
	return nil
}

func (x *Contract) GetOrderCancelAcked() bool {
	if x != nil {
		return x.OrderCancelAcked
	}
	return false
}

func (x *Contract) GetOrderConfirmation() *OrderConfirmation {
	if x != nil {
		return x.OrderConfirmation
	}
	return nil
}

func (x *Contract) GetOrderConfirmationAcked() bool {
	if x != nil {
		return x.OrderConfirmationAcked
	}
	return false
}

func (x *Contract) GetOrderComplete() *OrderComplete {
	if x != nil {
		return x.OrderComplete
	}
	return nil
}

func (x *Contract) GetOrderCompleteAcked() bool {
	if x != nil {
		return x.OrderCompleteAcked
	}
	return false
}

func (x *Contract) GetDisputeOpen() *DisputeOpen {
	if x != nil {
		return x.DisputeOpen
	}
	return nil
}

func (x *Contract) GetDisputeOpenOtherPartyAcked() bool {
	if x != nil {
		return x.DisputeOpenOtherPartyAcked
	}
	return false
}

func (x *Contract) GetDisputeOpenModeratorAcked() bool {
	if x != nil {
		return x.DisputeOpenModeratorAcked
	}
	return false
}

func (x *Contract) GetDisputeClose() *DisputeClose {
	if x != nil {
		return x.DisputeClose
	}
	return nil
}

func (x *Contract) GetDisputeCloseAcked() bool {
	if x != nil {
		return x.DisputeCloseAcked
	}
	return false
}

func (x *Contract) GetDisputeUpdate() *DisputeUpdate {
	if x != nil {
		return x.DisputeUpdate
	}
	return nil
}

func (x *Contract) GetDisputeUpdateAcked() bool {
	if x != nil {
		return x.DisputeUpdateAcked
	}
	return false
}

func (x *Contract) GetPaymentFinalized() *PaymentFinalized {
	if x != nil {
		return x.PaymentFinalized
	}
	return nil
}

func (x *Contract) GetPaymentFinalizedAcked() bool {
	if x != nil {
		return x.PaymentFinalizedAcked
	}
	return false
}

func (x *Contract) GetOrderFulfillments() []*OrderFulfillment {
	if x != nil {
		return x.OrderFulfillments
	}
	return nil
}

func (x *Contract) GetFulfillmentsAcked() bool {
	if x != nil {
		return x.FulfillmentsAcked
	}
	return false
}

func (x *Contract) GetRefunds() []*Refund {
	if x != nil {
		return x.Refunds
	}
	return nil
}

func (x *Contract) GetRefundsAcked() bool {
	if x != nil {
		return x.RefundsAcked
	}
	return false
}

func (x *Contract) GetPaymentsSent() []*PaymentSent {
	if x != nil {
		return x.PaymentsSent
	}
	return nil
}

func (x *Contract) GetPaymentsSentAcked() bool {
	if x != nil {
		return x.PaymentsSentAcked
	}
	return false
}

func (x *Contract) GetParkedMessages() *pb.OrderList {
	if x != nil {
		return x.ParkedMessages
	}
	return nil
}

func (x *Contract) GetErroredMessages() *pb.OrderList {
	if x != nil {
		return x.ErroredMessages
	}
	return nil
}

func (x *Contract) GetTransactions() []*Contract_Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type OrderOpen_Shipping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipTo       string      `protobuf:"bytes,1,opt,name=shipTo,proto3" json:"shipTo,omitempty"`
	Address      string      `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	City         string      `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	State        string      `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	PostalCode   string      `protobuf:"bytes,5,opt,name=postalCode,proto3" json:"postalCode,omitempty"`
	Country      CountryCode `protobuf:"varint,6,opt,name=country,proto3,enum=CountryCode" json:"country,omitempty"`
	AddressNotes string      `protobuf:"bytes,7,opt,name=addressNotes,proto3" json:"addressNotes,omitempty"`
}

func (x *OrderOpen_Shipping) Reset() {
	*x = OrderOpen_Shipping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOpen_Shipping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOpen_Shipping) ProtoMessage() {}

func (x *OrderOpen_Shipping) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOpen_Shipping.ProtoReflect.Descriptor instead.
func (*OrderOpen_Shipping) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{0, 0}
}

func (x *OrderOpen_Shipping) GetShipTo() string {
	if x != nil {
		return x.ShipTo
	}
	return ""
}

func (x *OrderOpen_Shipping) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *OrderOpen_Shipping) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *OrderOpen_Shipping) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *OrderOpen_Shipping) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *OrderOpen_Shipping) GetCountry() CountryCode {
	if x != nil {
		return x.Country
	}
	return CountryCode_NA
}

func (x *OrderOpen_Shipping) GetAddressNotes() string {
	if x != nil {
		return x.AddressNotes
	}
	return ""
}

type OrderOpen_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListingHash    string                         `protobuf:"bytes,1,opt,name=listingHash,proto3" json:"listingHash,omitempty"`
	Quantity       string                         `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Options        []*OrderOpen_Item_Option       `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	ShippingOption *OrderOpen_Item_ShippingOption `protobuf:"bytes,4,opt,name=shippingOption,proto3" json:"shippingOption,omitempty"`
	Memo           string                         `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	CouponCodes    []string                       `protobuf:"bytes,6,rep,name=couponCodes,proto3" json:"couponCodes,omitempty"`
	PaymentAddress string                         `protobuf:"bytes,7,opt,name=paymentAddress,proto3" json:"paymentAddress,omitempty"`
}

func (x *OrderOpen_Item) Reset() {
	*x = OrderOpen_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOpen_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOpen_Item) ProtoMessage() {}

func (x *OrderOpen_Item) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOpen_Item.ProtoReflect.Descriptor instead.
func (*OrderOpen_Item) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{0, 1}
}

func (x *OrderOpen_Item) GetListingHash() string {
	if x != nil {
		return x.ListingHash
	}
	return ""
}

func (x *OrderOpen_Item) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *OrderOpen_Item) GetOptions() []*OrderOpen_Item_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *OrderOpen_Item) GetShippingOption() *OrderOpen_Item_ShippingOption {
	if x != nil {
		return x.ShippingOption
	}
	return nil
}

func (x *OrderOpen_Item) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *OrderOpen_Item) GetCouponCodes() []string {
	if x != nil {
		return x.CouponCodes
	}
	return nil
}

func (x *OrderOpen_Item) GetPaymentAddress() string {
	if x != nil {
		return x.PaymentAddress
	}
	return ""
}

type OrderOpen_Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method           OrderOpen_Payment_Method `protobuf:"varint,1,opt,name=method,proto3,enum=OrderOpen_Payment_Method" json:"method,omitempty"`
	Moderator        string                   `protobuf:"bytes,2,opt,name=moderator,proto3" json:"moderator,omitempty"`
	Amount           string                   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`       // Satoshis
	Chaincode        string                   `protobuf:"bytes,4,opt,name=chaincode,proto3" json:"chaincode,omitempty"` // Hex encoded
	Address          string                   `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`     // B58check encoded
	Script           string                   `protobuf:"bytes,6,opt,name=script,proto3" json:"script,omitempty"`       // Hex encoded, usually redeem script.
	ModeratorKey     []byte                   `protobuf:"bytes,7,opt,name=moderatorKey,proto3" json:"moderatorKey,omitempty"`
	Coin             string                   `protobuf:"bytes,8,opt,name=coin,proto3" json:"coin,omitempty"`
	EscrowReleaseFee string                   `protobuf:"bytes,9,opt,name=escrowReleaseFee,proto3" json:"escrowReleaseFee,omitempty"`
}

func (x *OrderOpen_Payment) Reset() {
	*x = OrderOpen_Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOpen_Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOpen_Payment) ProtoMessage() {}

func (x *OrderOpen_Payment) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOpen_Payment.ProtoReflect.Descriptor instead.
func (*OrderOpen_Payment) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{0, 2}
}

func (x *OrderOpen_Payment) GetMethod() OrderOpen_Payment_Method {
	if x != nil {
		return x.Method
	}
	return OrderOpen_Payment_DIRECT
}

func (x *OrderOpen_Payment) GetModerator() string {
	if x != nil {
		return x.Moderator
	}
	return ""
}

func (x *OrderOpen_Payment) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *OrderOpen_Payment) GetChaincode() string {
	if x != nil {
		return x.Chaincode
	}
	return ""
}

func (x *OrderOpen_Payment) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *OrderOpen_Payment) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *OrderOpen_Payment) GetModeratorKey() []byte {
	if x != nil {
		return x.ModeratorKey
	}
	return nil
}

func (x *OrderOpen_Payment) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *OrderOpen_Payment) GetEscrowReleaseFee() string {
	if x != nil {
		return x.EscrowReleaseFee
	}
	return ""
}

type OrderOpen_Item_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OrderOpen_Item_Option) Reset() {
	*x = OrderOpen_Item_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOpen_Item_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOpen_Item_Option) ProtoMessage() {}

func (x *OrderOpen_Item_Option) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOpen_Item_Option.ProtoReflect.Descriptor instead.
func (*OrderOpen_Item_Option) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *OrderOpen_Item_Option) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderOpen_Item_Option) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type OrderOpen_Item_ShippingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *OrderOpen_Item_ShippingOption) Reset() {
	*x = OrderOpen_Item_ShippingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOpen_Item_ShippingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOpen_Item_ShippingOption) ProtoMessage() {}

func (x *OrderOpen_Item_ShippingOption) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOpen_Item_ShippingOption.ProtoReflect.Descriptor instead.
func (*OrderOpen_Item_ShippingOption) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *OrderOpen_Item_ShippingOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderOpen_Item_ShippingOption) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type OrderFulfillment_FulfilledItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIndex uint32 `protobuf:"varint,1,opt,name=itemIndex,proto3" json:"itemIndex,omitempty"`
	Note      string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	// Types that are assignable to Delivery:
	//	*OrderFulfillment_FulfilledItem_PhysicalDelivery_
	//	*OrderFulfillment_FulfilledItem_DigitalDelivery_
	//	*OrderFulfillment_FulfilledItem_CryptocurrencyDelivery_
	Delivery isOrderFulfillment_FulfilledItem_Delivery `protobuf_oneof:"delivery"`
}

func (x *OrderFulfillment_FulfilledItem) Reset() {
	*x = OrderFulfillment_FulfilledItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFulfillment_FulfilledItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFulfillment_FulfilledItem) ProtoMessage() {}

func (x *OrderFulfillment_FulfilledItem) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFulfillment_FulfilledItem.ProtoReflect.Descriptor instead.
func (*OrderFulfillment_FulfilledItem) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{6, 0}
}

func (x *OrderFulfillment_FulfilledItem) GetItemIndex() uint32 {
	if x != nil {
		return x.ItemIndex
	}
	return 0
}

func (x *OrderFulfillment_FulfilledItem) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (m *OrderFulfillment_FulfilledItem) GetDelivery() isOrderFulfillment_FulfilledItem_Delivery {
	if m != nil {
		return m.Delivery
	}
	return nil
}

func (x *OrderFulfillment_FulfilledItem) GetPhysicalDelivery() *OrderFulfillment_FulfilledItem_PhysicalDelivery {
	if x, ok := x.GetDelivery().(*OrderFulfillment_FulfilledItem_PhysicalDelivery_); ok {
		return x.PhysicalDelivery
	}
	return nil
}

func (x *OrderFulfillment_FulfilledItem) GetDigitalDelivery() *OrderFulfillment_FulfilledItem_DigitalDelivery {
	if x, ok := x.GetDelivery().(*OrderFulfillment_FulfilledItem_DigitalDelivery_); ok {
		return x.DigitalDelivery
	}
	return nil
}

func (x *OrderFulfillment_FulfilledItem) GetCryptocurrencyDelivery() *OrderFulfillment_FulfilledItem_CryptocurrencyDelivery {
	if x, ok := x.GetDelivery().(*OrderFulfillment_FulfilledItem_CryptocurrencyDelivery_); ok {
		return x.CryptocurrencyDelivery
	}
	return nil
}

type isOrderFulfillment_FulfilledItem_Delivery interface {
	isOrderFulfillment_FulfilledItem_Delivery()
}

type OrderFulfillment_FulfilledItem_PhysicalDelivery_ struct {
	// Physical goods only
	PhysicalDelivery *OrderFulfillment_FulfilledItem_PhysicalDelivery `protobuf:"bytes,3,opt,name=physicalDelivery,proto3,oneof"`
}

type OrderFulfillment_FulfilledItem_DigitalDelivery_ struct {
	// Digital goods only
	DigitalDelivery *OrderFulfillment_FulfilledItem_DigitalDelivery `protobuf:"bytes,4,opt,name=digitalDelivery,proto3,oneof"`
}

type OrderFulfillment_FulfilledItem_CryptocurrencyDelivery_ struct {
	// CryptoCurrency items only
	CryptocurrencyDelivery *OrderFulfillment_FulfilledItem_CryptocurrencyDelivery `protobuf:"bytes,5,opt,name=cryptocurrencyDelivery,proto3,oneof"`
}

func (*OrderFulfillment_FulfilledItem_PhysicalDelivery_) isOrderFulfillment_FulfilledItem_Delivery() {
}

func (*OrderFulfillment_FulfilledItem_DigitalDelivery_) isOrderFulfillment_FulfilledItem_Delivery() {}

func (*OrderFulfillment_FulfilledItem_CryptocurrencyDelivery_) isOrderFulfillment_FulfilledItem_Delivery() {
}

type OrderFulfillment_FulfilledItem_PhysicalDelivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shipper        string `protobuf:"bytes,1,opt,name=shipper,proto3" json:"shipper,omitempty"`
	TrackingNumber string `protobuf:"bytes,2,opt,name=trackingNumber,proto3" json:"trackingNumber,omitempty"`
}

func (x *OrderFulfillment_FulfilledItem_PhysicalDelivery) Reset() {
	*x = OrderFulfillment_FulfilledItem_PhysicalDelivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFulfillment_FulfilledItem_PhysicalDelivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFulfillment_FulfilledItem_PhysicalDelivery) ProtoMessage() {}

func (x *OrderFulfillment_FulfilledItem_PhysicalDelivery) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFulfillment_FulfilledItem_PhysicalDelivery.ProtoReflect.Descriptor instead.
func (*OrderFulfillment_FulfilledItem_PhysicalDelivery) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *OrderFulfillment_FulfilledItem_PhysicalDelivery) GetShipper() string {
	if x != nil {
		return x.Shipper
	}
	return ""
}

func (x *OrderFulfillment_FulfilledItem_PhysicalDelivery) GetTrackingNumber() string {
	if x != nil {
		return x.TrackingNumber
	}
	return ""
}

type OrderFulfillment_FulfilledItem_DigitalDelivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *OrderFulfillment_FulfilledItem_DigitalDelivery) Reset() {
	*x = OrderFulfillment_FulfilledItem_DigitalDelivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFulfillment_FulfilledItem_DigitalDelivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFulfillment_FulfilledItem_DigitalDelivery) ProtoMessage() {}

func (x *OrderFulfillment_FulfilledItem_DigitalDelivery) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFulfillment_FulfilledItem_DigitalDelivery.ProtoReflect.Descriptor instead.
func (*OrderFulfillment_FulfilledItem_DigitalDelivery) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{6, 0, 1}
}

func (x *OrderFulfillment_FulfilledItem_DigitalDelivery) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OrderFulfillment_FulfilledItem_DigitalDelivery) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type OrderFulfillment_FulfilledItem_CryptocurrencyDelivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID string `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
}

func (x *OrderFulfillment_FulfilledItem_CryptocurrencyDelivery) Reset() {
	*x = OrderFulfillment_FulfilledItem_CryptocurrencyDelivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFulfillment_FulfilledItem_CryptocurrencyDelivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFulfillment_FulfilledItem_CryptocurrencyDelivery) ProtoMessage() {}

func (x *OrderFulfillment_FulfilledItem_CryptocurrencyDelivery) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFulfillment_FulfilledItem_CryptocurrencyDelivery.ProtoReflect.Descriptor instead.
func (*OrderFulfillment_FulfilledItem_CryptocurrencyDelivery) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{6, 0, 2}
}

func (x *OrderFulfillment_FulfilledItem_CryptocurrencyDelivery) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

type DisputeClose_ModeratedEscrowRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EscrowSignatures []*Signature `protobuf:"bytes,1,rep,name=escrowSignatures,proto3" json:"escrowSignatures,omitempty"`
	FromIDs          [][]byte     `protobuf:"bytes,2,rep,name=fromIDs,proto3" json:"fromIDs,omitempty"`
	BuyerAddress     string       `protobuf:"bytes,3,opt,name=buyerAddress,proto3" json:"buyerAddress,omitempty"`
	BuyerAmount      string       `protobuf:"bytes,4,opt,name=buyerAmount,proto3" json:"buyerAmount,omitempty"`
	VendorAddress    string       `protobuf:"bytes,5,opt,name=vendorAddress,proto3" json:"vendorAddress,omitempty"`
	VendorAmount     string       `protobuf:"bytes,6,opt,name=vendorAmount,proto3" json:"vendorAmount,omitempty"`
	ModeratorAddress string       `protobuf:"bytes,7,opt,name=moderatorAddress,proto3" json:"moderatorAddress,omitempty"`
	ModeratorAmount  string       `protobuf:"bytes,8,opt,name=moderatorAmount,proto3" json:"moderatorAmount,omitempty"`
	TransactionFee   string       `protobuf:"bytes,9,opt,name=transactionFee,proto3" json:"transactionFee,omitempty"`
}

func (x *DisputeClose_ModeratedEscrowRelease) Reset() {
	*x = DisputeClose_ModeratedEscrowRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisputeClose_ModeratedEscrowRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisputeClose_ModeratedEscrowRelease) ProtoMessage() {}

func (x *DisputeClose_ModeratedEscrowRelease) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisputeClose_ModeratedEscrowRelease.ProtoReflect.Descriptor instead.
func (*DisputeClose_ModeratedEscrowRelease) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{11, 0}
}

func (x *DisputeClose_ModeratedEscrowRelease) GetEscrowSignatures() []*Signature {
	if x != nil {
		return x.EscrowSignatures
	}
	return nil
}

func (x *DisputeClose_ModeratedEscrowRelease) GetFromIDs() [][]byte {
	if x != nil {
		return x.FromIDs
	}
	return nil
}

func (x *DisputeClose_ModeratedEscrowRelease) GetBuyerAddress() string {
	if x != nil {
		return x.BuyerAddress
	}
	return ""
}

func (x *DisputeClose_ModeratedEscrowRelease) GetBuyerAmount() string {
	if x != nil {
		return x.BuyerAmount
	}
	return ""
}

func (x *DisputeClose_ModeratedEscrowRelease) GetVendorAddress() string {
	if x != nil {
		return x.VendorAddress
	}
	return ""
}

func (x *DisputeClose_ModeratedEscrowRelease) GetVendorAmount() string {
	if x != nil {
		return x.VendorAmount
	}
	return ""
}

func (x *DisputeClose_ModeratedEscrowRelease) GetModeratorAddress() string {
	if x != nil {
		return x.ModeratorAddress
	}
	return ""
}

func (x *DisputeClose_ModeratedEscrowRelease) GetModeratorAmount() string {
	if x != nil {
		return x.ModeratorAmount
	}
	return ""
}

func (x *DisputeClose_ModeratedEscrowRelease) GetTransactionFee() string {
	if x != nil {
		return x.TransactionFee
	}
	return ""
}

type PaymentSentList_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSentMessage *PaymentSent `protobuf:"bytes,1,opt,name=paymentSentMessage,proto3" json:"paymentSentMessage,omitempty"`
	Signature          []byte       `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *PaymentSentList_Message) Reset() {
	*x = PaymentSentList_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSentList_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSentList_Message) ProtoMessage() {}

func (x *PaymentSentList_Message) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSentList_Message.ProtoReflect.Descriptor instead.
func (*PaymentSentList_Message) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{17, 0}
}

func (x *PaymentSentList_Message) GetPaymentSentMessage() *PaymentSent {
	if x != nil {
		return x.PaymentSentMessage
	}
	return nil
}

func (x *PaymentSentList_Message) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type FulfillmentList_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FulfillmentMessage *OrderFulfillment `protobuf:"bytes,1,opt,name=fulfillmentMessage,proto3" json:"fulfillmentMessage,omitempty"`
	Signature          []byte            `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *FulfillmentList_Message) Reset() {
	*x = FulfillmentList_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FulfillmentList_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FulfillmentList_Message) ProtoMessage() {}

func (x *FulfillmentList_Message) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FulfillmentList_Message.ProtoReflect.Descriptor instead.
func (*FulfillmentList_Message) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{18, 0}
}

func (x *FulfillmentList_Message) GetFulfillmentMessage() *OrderFulfillment {
	if x != nil {
		return x.FulfillmentMessage
	}
	return nil
}

func (x *FulfillmentList_Message) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type RefundList_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundMessage *Refund `protobuf:"bytes,1,opt,name=refundMessage,proto3" json:"refundMessage,omitempty"`
	Signature     []byte  `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *RefundList_Message) Reset() {
	*x = RefundList_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundList_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundList_Message) ProtoMessage() {}

func (x *RefundList_Message) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundList_Message.ProtoReflect.Descriptor instead.
func (*RefundList_Message) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{19, 0}
}

func (x *RefundList_Message) GetRefundMessage() *Refund {
	if x != nil {
		return x.RefundMessage
	}
	return nil
}

func (x *RefundList_Message) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Contract_Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid      string               `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Value     string               `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Contract_Transaction) Reset() {
	*x = Contract_Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract_Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract_Transaction) ProtoMessage() {}

func (x *Contract_Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract_Transaction.ProtoReflect.Descriptor instead.
func (*Contract_Transaction) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{20, 0}
}

func (x *Contract_Transaction) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Contract_Transaction) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Contract_Transaction) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_orders_proto protoreflect.FileDescriptor

var file_orders_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x09, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x0a, 0x0a, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x6c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x07,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x03, 0x2e,
	0x49, 0x44, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x6c,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xd2,
	0x01, 0x0a, 0x08, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x68, 0x69, 0x70, 0x54, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x69,
	0x70, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f,
	0x74, 0x65, 0x73, 0x1a, 0x90, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x0e,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x1a, 0x32, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3e, 0x0a, 0x0e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0xdb, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65,
	0x73, 0x63, 0x72, 0x6f, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x22,
	0x33, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x49, 0x52,
	0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x22, 0xc1, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x22, 0x73, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x6d, 0x0a,
	0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x72, 0x0a, 0x10,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x04, 0x73, 0x69, 0x67, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x6d, 0x0a, 0x0f, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x99, 0x06, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x0c, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x0b, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x45, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0xd3, 0x04, 0x0a, 0x0d, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x5e, 0x0a, 0x10, 0x70, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x10, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x5b, 0x0a, 0x0f, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x2e, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x70, 0x0a, 0x16, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x16, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x1a, 0x54, 0x0a, 0x10, 0x50, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x3f,
	0x0a, 0x0f, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a,
	0x3e, 0x0a, 0x16, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42,
	0x0a, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x22, 0x9e, 0x01, 0x0a, 0x0d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x07, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x30, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x45, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xd4, 0x03, 0x0a,
	0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x03, 0x2e, 0x49, 0x44, 0x52, 0x08,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x53, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x03, 0x2e, 0x49, 0x44, 0x52, 0x07,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x79, 0x65, 0x72, 0x53, 0x69,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x75, 0x79, 0x65, 0x72, 0x53, 0x69,
	0x67, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x4f,
	0x70, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x4f,
	0x70, 0x65, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x22, 0x1e, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x55,
	0x59, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x45, 0x4e, 0x44, 0x4f, 0x52, 0x10,
	0x01, 0x22, 0x65, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0xa5, 0x04, 0x0a, 0x0c, 0x44, 0x69, 0x73,
	0x70, 0x75, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x64, 0x69, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x64,
	0x69, 0x63, 0x74, 0x12, 0x46, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x75,
	0x74, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x45, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0xf8, 0x02, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x45, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x10, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x10, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d,
	0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x49,
	0x44, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x22, 0xc4, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x45, 0x73, 0x63, 0x72, 0x6f,
	0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0c, 0x0a, 0x0a, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x12, 0x0a, 0x10,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x22, 0xc3, 0x01, 0x0a, 0x0d, 0x45, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x10, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x10, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72,
	0x6f, 0x6d, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x72, 0x6f,
	0x6d, 0x49, 0x44, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x22, 0x53, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xae, 0x01, 0x0a, 0x0f,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x65, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3c, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb3, 0x01, 0x0a,
	0x0f, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x6a, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x41, 0x0a, 0x12, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x12, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x1a, 0x56, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x0d, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xba, 0x0c, 0x0a, 0x08, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4f, 0x70, 0x65, 0x6e, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x12,
	0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x6b, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x6e, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x63,
	0x6b, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x40, 0x0a, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x36, 0x0a, 0x16, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x16, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x0d, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x2e, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x70,
	0x65, 0x6e, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x12,
	0x3e, 0x0a, 0x1a, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1a, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x3c, 0x0a, 0x19, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x19, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x31, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x41, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73,
	0x70, 0x75, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x11, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x16,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x66,
	0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x07, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x30, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x18,
	0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x32, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x65,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x71, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orders_proto_rawDescOnce sync.Once
	file_orders_proto_rawDescData = file_orders_proto_rawDesc
)

func file_orders_proto_rawDescGZIP() []byte {
	file_orders_proto_rawDescOnce.Do(func() {
		file_orders_proto_rawDescData = protoimpl.X.CompressGZIP(file_orders_proto_rawDescData)
	})
	return file_orders_proto_rawDescData
}

var file_orders_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_orders_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_orders_proto_goTypes = []interface{}{
	(OrderOpen_Payment_Method)(0),          // 0: OrderOpen.Payment.Method
	(OrderReject_RejectType)(0),            // 1: OrderReject.RejectType
	(DisputeOpen_Party)(0),                 // 2: DisputeOpen.Party
	(*OrderOpen)(nil),                      // 3: OrderOpen
	(*OrderReject)(nil),                    // 4: OrderReject
	(*OrderConfirmation)(nil),              // 5: OrderConfirmation
	(*OrderCancel)(nil),                    // 6: OrderCancel
	(*RatingSignatures)(nil),               // 7: RatingSignatures
	(*RatingSignature)(nil),                // 8: RatingSignature
	(*OrderFulfillment)(nil),               // 9: OrderFulfillment
	(*OrderComplete)(nil),                  // 10: OrderComplete
	(*Rating)(nil),                         // 11: Rating
	(*DisputeOpen)(nil),                    // 12: DisputeOpen
	(*DisputeUpdate)(nil),                  // 13: DisputeUpdate
	(*DisputeClose)(nil),                   // 14: DisputeClose
	(*Refund)(nil),                         // 15: Refund
	(*PaymentSent)(nil),                    // 16: PaymentSent
	(*PaymentFinalized)(nil),               // 17: PaymentFinalized
	(*EscrowRelease)(nil),                  // 18: EscrowRelease
	(*Signature)(nil),                      // 19: Signature
	(*PaymentSentList)(nil),                // 20: PaymentSentList
	(*FulfillmentList)(nil),                // 21: FulfillmentList
	(*RefundList)(nil),                     // 22: RefundList
	(*Contract)(nil),                       // 23: Contract
	(*OrderOpen_Shipping)(nil),             // 24: OrderOpen.Shipping
	(*OrderOpen_Item)(nil),                 // 25: OrderOpen.Item
	(*OrderOpen_Payment)(nil),              // 26: OrderOpen.Payment
	(*OrderOpen_Item_Option)(nil),          // 27: OrderOpen.Item.Option
	(*OrderOpen_Item_ShippingOption)(nil),  // 28: OrderOpen.Item.ShippingOption
	(*OrderFulfillment_FulfilledItem)(nil), // 29: OrderFulfillment.FulfilledItem
	(*OrderFulfillment_FulfilledItem_PhysicalDelivery)(nil),       // 30: OrderFulfillment.FulfilledItem.PhysicalDelivery
	(*OrderFulfillment_FulfilledItem_DigitalDelivery)(nil),        // 31: OrderFulfillment.FulfilledItem.DigitalDelivery
	(*OrderFulfillment_FulfilledItem_CryptocurrencyDelivery)(nil), // 32: OrderFulfillment.FulfilledItem.CryptocurrencyDelivery
	(*DisputeClose_ModeratedEscrowRelease)(nil),                   // 33: DisputeClose.ModeratedEscrowRelease
	(*PaymentSentList_Message)(nil),                               // 34: PaymentSentList.Message
	(*FulfillmentList_Message)(nil),                               // 35: FulfillmentList.Message
	(*RefundList_Message)(nil),                                    // 36: RefundList.Message
	(*Contract_Transaction)(nil),                                  // 37: Contract.Transaction
	(*SignedListing)(nil),                                         // 38: SignedListing
	(*ID)(nil),                                                    // 39: ID
	(*timestamp.Timestamp)(nil),                                   // 40: google.protobuf.Timestamp
	(*pb.OrderList)(nil),                                          // 41: OrderList
	(CountryCode)(0),                                              // 42: CountryCode
}
var file_orders_proto_depIdxs = []int32{
	38, // 0: OrderOpen.listings:type_name -> SignedListing
	24, // 1: OrderOpen.shipping:type_name -> OrderOpen.Shipping
	39, // 2: OrderOpen.buyerID:type_name -> ID
	40, // 3: OrderOpen.timestamp:type_name -> google.protobuf.Timestamp
	25, // 4: OrderOpen.items:type_name -> OrderOpen.Item
	26, // 5: OrderOpen.payment:type_name -> OrderOpen.Payment
	1,  // 6: OrderReject.type:type_name -> OrderReject.RejectType
	40, // 7: OrderReject.timestamp:type_name -> google.protobuf.Timestamp
	40, // 8: OrderConfirmation.timestamp:type_name -> google.protobuf.Timestamp
	40, // 9: OrderCancel.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 10: RatingSignatures.sigs:type_name -> RatingSignature
	40, // 11: RatingSignatures.timestamp:type_name -> google.protobuf.Timestamp
	29, // 12: OrderFulfillment.fulfillments:type_name -> OrderFulfillment.FulfilledItem
	18, // 13: OrderFulfillment.releaseInfo:type_name -> EscrowRelease
	40, // 14: OrderFulfillment.timestamp:type_name -> google.protobuf.Timestamp
	11, // 15: OrderComplete.ratings:type_name -> Rating
	18, // 16: OrderComplete.releaseInfo:type_name -> EscrowRelease
	40, // 17: OrderComplete.timestamp:type_name -> google.protobuf.Timestamp
	39, // 18: Rating.vendorID:type_name -> ID
	8,  // 19: Rating.vendorSig:type_name -> RatingSignature
	39, // 20: Rating.buyerID:type_name -> ID
	40, // 21: Rating.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 22: DisputeOpen.openedBy:type_name -> DisputeOpen.Party
	40, // 23: DisputeOpen.timestamp:type_name -> google.protobuf.Timestamp
	40, // 24: DisputeUpdate.timestamp:type_name -> google.protobuf.Timestamp
	33, // 25: DisputeClose.releaseInfo:type_name -> DisputeClose.ModeratedEscrowRelease
	40, // 26: DisputeClose.timestamp:type_name -> google.protobuf.Timestamp
	18, // 27: Refund.releaseInfo:type_name -> EscrowRelease
	40, // 28: Refund.timestamp:type_name -> google.protobuf.Timestamp
	19, // 29: EscrowRelease.escrowSignatures:type_name -> Signature
	34, // 30: PaymentSentList.messages:type_name -> PaymentSentList.Message
	35, // 31: FulfillmentList.messages:type_name -> FulfillmentList.Message
	36, // 32: RefundList.messages:type_name -> RefundList.Message
	3,  // 33: Contract.orderOpen:type_name -> OrderOpen
	4,  // 34: Contract.orderReject:type_name -> OrderReject
	6,  // 35: Contract.orderCancel:type_name -> OrderCancel
	5,  // 36: Contract.orderConfirmation:type_name -> OrderConfirmation
	10, // 37: Contract.orderComplete:type_name -> OrderComplete
	12, // 38: Contract.disputeOpen:type_name -> DisputeOpen
	14, // 39: Contract.disputeClose:type_name -> DisputeClose
	13, // 40: Contract.disputeUpdate:type_name -> DisputeUpdate
	17, // 41: Contract.paymentFinalized:type_name -> PaymentFinalized
	9,  // 42: Contract.orderFulfillments:type_name -> OrderFulfillment
	15, // 43: Contract.refunds:type_name -> Refund
	16, // 44: Contract.paymentsSent:type_name -> PaymentSent
	41, // 45: Contract.parkedMessages:type_name -> pb.OrderList
	41, // 46: Contract.erroredMessages:type_name -> pb.OrderList
	37, // 47: Contract.transactions:type_name -> Contract.Transaction
	42, // 48: OrderOpen.Shipping.country:type_name -> CountryCode
	27, // 49: OrderOpen.Item.options:type_name -> OrderOpen.Item.Option
	28, // 50: OrderOpen.Item.shippingOption:type_name -> OrderOpen.Item.ShippingOption
	0,  // 51: OrderOpen.Payment.method:type_name -> OrderOpen.Payment.Method
	30, // 52: OrderFulfillment.FulfilledItem.physicalDelivery:type_name -> OrderFulfillment.FulfilledItem.PhysicalDelivery
	31, // 53: OrderFulfillment.FulfilledItem.digitalDelivery:type_name -> OrderFulfillment.FulfilledItem.DigitalDelivery
	32, // 54: OrderFulfillment.FulfilledItem.cryptocurrencyDelivery:type_name -> OrderFulfillment.FulfilledItem.CryptocurrencyDelivery
	19, // 55: DisputeClose.ModeratedEscrowRelease.escrowSignatures:type_name -> Signature
	16, // 56: PaymentSentList.Message.paymentSentMessage:type_name -> PaymentSent
	9,  // 57: FulfillmentList.Message.fulfillmentMessage:type_name -> OrderFulfillment
	15, // 58: RefundList.Message.refundMessage:type_name -> Refund
	40, // 59: Contract.Transaction.timestamp:type_name -> google.protobuf.Timestamp
	60, // [60:60] is the sub-list for method output_type
	60, // [60:60] is the sub-list for method input_type
	60, // [60:60] is the sub-list for extension type_name
	60, // [60:60] is the sub-list for extension extendee
	0,  // [0:60] is the sub-list for field type_name
}

func init() { file_orders_proto_init() }
func file_orders_proto_init() {
	if File_orders_proto != nil {
		return
	}
	file_countrycodes_proto_init()
	file_listing_proto_init()
	file_common_proto_init()

	if !protoimpl.UnsafeEnabled {
		file_orders_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderConfirmation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingSignatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFulfillment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisputeOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisputeUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisputeClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Refund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentFinalized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscrowRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FulfillmentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOpen_Shipping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOpen_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOpen_Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOpen_Item_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOpen_Item_ShippingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFulfillment_FulfilledItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFulfillment_FulfilledItem_PhysicalDelivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFulfillment_FulfilledItem_DigitalDelivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFulfillment_FulfilledItem_CryptocurrencyDelivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisputeClose_ModeratedEscrowRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSentList_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FulfillmentList_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundList_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract_Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_orders_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*Refund_TransactionID)(nil),
		(*Refund_ReleaseInfo)(nil),
	}
	file_orders_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*OrderFulfillment_FulfilledItem_PhysicalDelivery_)(nil),
		(*OrderFulfillment_FulfilledItem_DigitalDelivery_)(nil),
		(*OrderFulfillment_FulfilledItem_CryptocurrencyDelivery_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orders_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_orders_proto_goTypes,
		DependencyIndexes: file_orders_proto_depIdxs,
		EnumInfos:         file_orders_proto_enumTypes,
		MessageInfos:      file_orders_proto_msgTypes,
	}.Build()
	File_orders_proto = out.File
	file_orders_proto_rawDesc = nil
	file_orders_proto_goTypes = nil
	file_orders_proto_depIdxs = nil
}
